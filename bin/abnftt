#!/usr/bin/env ruby -Ku

require 'pp'
require 'yaml'

Encoding.default_external = Encoding::UTF_8

require 'abnftt'

unless fn = ARGV[0]
  warn "Usage: abnftt grammar.abnftt"
  exit 1
end
outfn = fn.sub(/\.abnftt\z/, "")

parser = ABNFGrammarParser.new
abnf_file = File.read(fn)
ast = parser.parse abnf_file
if ast
#  p ast
  abnf = ABNF.new(ast)
  File.open("#{outfn}.yaml", "w") do |f|
    f.puts abnf.tree.to_yaml
  end
  # pp ast.ast
  File.open("#{outfn}.treetop", "w") do |f|
    modname = File.basename(outfn).gsub("-", "_").gsub(/[^_a-zA-Z]/, "").upcase
    f.puts abnf.to_treetop(modname)
  end
  File.open("#{outfn}.abnf", "w") do |f|
    f.puts ast.clean_abnf.lines.map(&:rstrip).join("\n")
  end
else

  puts parser.failure_reason
  parser.failure_reason =~ /^(Expected .+) after/m
  puts "#{$1.gsub("\n", '<<<NEWLINE>>>')}:"
  puts abnf_file.lines.to_a[parser.failure_line - 1]
  puts "#{'~' * (parser.failure_column - 1)}^"
end
